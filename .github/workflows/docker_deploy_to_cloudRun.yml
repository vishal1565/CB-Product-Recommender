name: Deploy Cloud Run using the deploy-cloudrun GitHub Action
on:
  workflow_dispatch:

jobs:
  example:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      # actions/checkout MUST come before auth
      - name: 'Checkout'
        uses: 'actions/checkout@v3'

      - name: 'Authenticate to GCP as Infrastructure SA for deployment'
        uses: 'google-github-actions/auth@v1'
        with:
          export_environment_variables: true
          project_id : ${{ vars.PROJECT_ID }}
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.INFRA_SA_EMAIL }} # Use your Infrastructure SA to manage resources

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: 'Authenticate to GCP as workload SA for invocation'
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'id_token' # <--
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.WORKLOAD_SA_EMAIL }} # Use your Workload SA to interact with resources
          #id_token_audience: ${{ steps.deploy.outputs.url }}
          id_token_include_email: true

      - name: Build docker image
        run: docker build . -f Dockerfile -t us.gcr.io/hack-team-hack-o-holics/hack-o-holics-ui:1.0.0

      #- name: Login to GCR
      #  run: docker login -u oath2accesstoken -p "$(gcloud auth print-access-token)" https://gcr.io/hack-o-holics-ui

      - name: Gcloud config
        run: gcloud config list
        
      - name: Push image to GCR
        run: docker push us.gcr.io/hack-team-hack-o-holics/hack-o-holics-ui:1.0.0
